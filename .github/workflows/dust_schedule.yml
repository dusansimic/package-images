name: dust

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

env:
  IMAGE_NAME: dust

jobs:
  get-version:
    name: Get next dust version
    runs-on: ubuntu-latest
    outputs:
      gh_version: ${{ steps.dust-version.outputs.gh_version }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Get next version
        id: dust-version
        run: |
          current_version="$(grep -E "PACKAGE_VERSION=.+" images/${{ env.IMAGE_NAME }}/Containerfile | sed 's/.*=//')"
          echo $current_version
          latest_version="$(curl -sL https://api.github.com/repos/bootandy/dust/releases/latest | jq -r '.tag_name' | cut -c2-)"
          echo $latest_version
          if [ "$current_version" != "$latest_version" ]; then
            next_version="$latest_version"
          fi
          echo $next_version
          echo "gh_version=${next_version}" >> $GITHUB_OUTPUT
  update-argument:
    name: Update version argument
    runs-on: ubuntu-latest
    needs: get-version
    if: ${{ needs.get-version.outputs.gh_version != '' }}
    strategy:
      matrix:
        arch: [x86_64, i686, aarch64]
        libc: [musl, gnu]
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
      - name: Update argument
        run: |
          sed -i "s/ARG PACKAGE_VERSION=.*/ARG PACKAGE_VERSION=${{ needs.get-version.outputs.gh_version }}/g" images/${{ env.IMAGE_NAME }}/Containerfile
      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Update dust to ${{ needs.get-version.outputs.gh_version }}
          commit_user_name: actions-user
          commit_user_email: actions@github.com
          commit_author: GitHub Actions <actions@github.com>
  build:
    needs: update-argument
    uses: ./.github/workflows/dust_build.yml
    with:
      new-version: ${{ needs.get-version.outputs.gh_version }}
